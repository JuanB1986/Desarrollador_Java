package Ejercicio1y2;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.io.IOException;
import java.util.*;

public class Carrito {
	
	//Variables
	private final int MAXIMO_PRODUCTOS=100;
	private float totalPrecioDescuento;
	private float totalPrecio; 
	private float totalPeso;
	private Producto objProductos[];
	private int cantidadProductos[];
	private int punteroProductos;
	private boolean tipoConstructor;
	private int longLista;
	
	//Variables para manejo de archivos
	private String ruta;
	private String descripcion[];
	private float  precio[];
	private float  peso[];
	
	
	//Constructor 
	public Carrito() {
		this.objProductos=new Producto [MAXIMO_PRODUCTOS];
		this.cantidadProductos=new int [MAXIMO_PRODUCTOS];
		this.punteroProductos=0;
		this.tipoConstructor=false;
	}
	
	
	//Constructor sobrecargado: Añado ruta para leer archivo de base de datos de compra
	public Carrito(String ruta) {
		this.ruta=ruta;
		this.punteroProductos=0;
		this.tipoConstructor=true;
		this.descripcion=new String [MAXIMO_PRODUCTOS];
		this.precio=new float[MAXIMO_PRODUCTOS];
		this.peso=new float [MAXIMO_PRODUCTOS];
		this.cantidadProductos=new int [MAXIMO_PRODUCTOS];
	}
	
	
	//Método agregar producto
	public void agregarProducto(Producto items, int cantidad) {
		if (this.punteroProductos<this.MAXIMO_PRODUCTOS) {
			this.objProductos[this.punteroProductos]=items;
			this.cantidadProductos[this.punteroProductos]=cantidad;
			this.punteroProductos++;
		}
		else
		{
			System.out.print("Máximo de productos alcanzado");
		}
	}
	
		
	
	//Método computo precio
	public void calcularPrecioTotal(Descuento objDescuento) 
	{	int i;
		Descuento objDesc;
		objDesc=objDescuento;
		
		if(!this.tipoConstructor) {
			this.totalPeso=0.0f;
			this.totalPrecio=0.0f;
			
			for (i=0;i<this.punteroProductos;++i) {				
				this.totalPrecio += this.objProductos[i].getPrecio()*this.cantidadProductos[i];
				this.totalPeso += this.objProductos[i].getPeso()*this.cantidadProductos[i];		
			}				
		}
		else 
		{
			String separador[];
			String file=null;
			
			try {
				file = Files.readString(Paths.get(ruta));
			}
			catch(IOException e) {}		
			
			separador = file.split(",");
			this.longLista = separador.length/3;
			
			for (i=0;i<separador.length/3;++i) {
				this.descripcion[i]=separador[i*3].toString();
				this.precio[i]=Float.parseFloat(separador[3*i+1].strip());			
				this.peso[i]=Float.parseFloat(separador[3*i+2].strip());				
			}
			
			this.totalPeso=0.0f;
			this.totalPrecio=0.0f;
			
			for (i=0;i<separador.length/3;++i) {
				this.totalPrecio += precio[i];
				this.totalPeso += peso[i];				
			}			
		}
		totalPrecioDescuento =totalPrecio- totalPrecio*objDesc.getDescuento()/100.0f;
	}
	
	
	
	//Métodos get precios
	public float getPrecioTotal() {return this.totalPrecio;}	
	public float getPesoTotal() {return this.totalPeso;}	
	
	
	//Método imprimir ticket.
	public void imprimirTicket() {
		int i,j;
		System.out.println("********************TICKET********************");
		
		if (!tipoConstructor) {
			for (i=0;i<this.punteroProductos;++i) {
				System.out.println( "Item("+(i+1)+") "+this.objProductos[i].getDescripcion()+ " ($ "+this.objProductos[i].getPrecio()+" - "+this.objProductos[i].getPeso()+" Kg.)  X "+this.cantidadProductos[i]+" Unidades");
			}				
		}
		else
		{
			for (i=0;i<this.longLista;++i) {
				System.out.print(this.descripcion[i]+" 	$: "+this.precio[i]+" 	Kg: "+this.peso[i]);				
			}
		}
		System.out.print("\n");
		System.out.println("-----------------------------------------------");
		System.out.println("Total     $: "+this.totalPrecio);
		System.out.println("Total Dto $: "+this.totalPrecioDescuento);
		System.out.println("Total Kg: "+this.totalPeso);
		System.out.println("**********************************************");
		System.out.print("\n\n");		
	}
}

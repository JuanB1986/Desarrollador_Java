package com.Ejercicios_Clase7;


import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import com.Ejercicios_Clase7.Excepciones.NegativePriceException;
import com.Ejercicios_Clase7.Excepciones.NullPriceException;

import java.io.IOException;


public class Carrito {
	
	//Variables
	private List<itemCarrito> listaProductos;
	private String file;
	
	//Constructor 
	public Carrito() {		
		listaProductos=new ArrayList<itemCarrito>();
	}	

	//Nuevo metodo add
	public void add(itemCarrito item) {
		this.listaProductos.add(item);
	}
	
	public void add(String descripcion, float precio, float peso, int cantidad) {
		Producto prod1=new Producto();
		itemCarrito item1=new itemCarrito(prod1,0);	
		
		item1.setDescripcion(descripcion);
		item1.setPrecio(precio);
		item1.setPeso(peso);
		item1.setCantidad(cantidad);
		
		this.listaProductos.add(item1);
	}
	
	public void add(String archivoRuta) throws NullPriceException, NegativePriceException 
	{
		Producto prod1=new Producto();
		itemCarrito item1=new itemCarrito(prod1,0);	
		
		String descripcion;
		float  precio;
		float  peso;
		int i, cantidadProductos;	
		String separador[];
		final int CANT_PARAMETROS_POR_LINEA=4;
		
		try {
			file = Files.readString(Paths.get(archivoRuta));
		}
		catch(IOException e) {}		
		
		separador = file.split(",");
		
		for (i=0;i<separador.length/CANT_PARAMETROS_POR_LINEA;++i) 
		{		
			descripcion=separador[i*CANT_PARAMETROS_POR_LINEA].toString();
			precio=Float.parseFloat(separador[CANT_PARAMETROS_POR_LINEA*i+1].strip());			
			peso=Float.parseFloat(separador[CANT_PARAMETROS_POR_LINEA*i+2].strip());	
			cantidadProductos=Integer.parseInt(separador[CANT_PARAMETROS_POR_LINEA*i+3].strip());	
			
			this.add(descripcion, precio, peso, cantidadProductos);
			
		/*	item1.setDescripcion(descripcion);
			item1.setPeso(peso);
			item1.setPrecio(precio);
			item1=new itemCarrito(prod1,cantidadProductos);	
			//item1.setProducto(prod1);
		
			this.listaProductos.add(item1);*/
			
		}			

		for (i=0;i<separador.length/CANT_PARAMETROS_POR_LINEA;++i) {
			System.out.println(listaProductos.get(i).getPrecio());
		}
		
	}
	
	
	//Nuevo metodo remove
	public void remove(itemCarrito item) {
		this.listaProductos.remove(item);
	}
	
	public double getPesoTotal() {		
		int i;
		double peso=0.0;
		
		for (i=0; i<listaProductos.size();++i) {
			peso +=listaProductos.get(i).getPeso() * listaProductos.get(i).getCantidad();			
		}
		return peso;	
		
	}
	
	
	public double precioTotal() throws NullPriceException, NegativePriceException {
		int i;
		double precio=0.0;		
		for (i=0; i<listaProductos.size();++i) {
			precio += listaProductos.get(i).getPrecio() * listaProductos.get(i).getCantidad();
			System.out.println(listaProductos.get(i).getPrecio());
		}
		return precio;	
	}
	
	
	public double precioTotal(Descuento descuento ) throws NullPriceException, NegativePriceException {
		int i;
		double precio=0.0;
		for (i=0; i<listaProductos.size();++i) {
			precio +=listaProductos.get(i).getPrecio()* listaProductos.get(i).getCantidad();
		}
		return precio-(precio*descuento.getDescuento()/100.0f);	
	}
}
	
/****************************************************************************************************************/	
	
	
	
	/*
	
	
	//MÃ©todo imprimir ticket.
	public void imprimirTicket() throws NullPriceException, NegativePriceException {
		int i;
		System.out.println("********************TICKET********************");
		
		if (!tipoConstructor) {
			for (i=0;i<this.punteroProductos;++i) {
				System.out.println( "Item("+(i+1)+") "+this.objProductos[i].getDescripcion()+ " ($ "+this.objProductos[i].getPrecio()+" - "+this.objProductos[i].getPeso()+" Kg.)  X "+this.cantidadProductos[i]+" Unidades");

			}				
		}
		else
		{
			for (i=0;i<this.archivoLongitudLista;++i) {
				System.out.println( "Item("+(i+1)+") "+this.descripcion[i].strip() + " ($ "+this.precio[i]+" - "+this.peso[i]+" Kg.)  X "+this.archivoCantidadProductos[i]+" Unidades");
			}
		}
		System.out.print("\n");
		System.out.println("-----------------------------------------------");
		System.out.println("Total     $: "+this.totalPrecio);
		System.out.println("Total Dto $: "+this.totalPrecioDescuento);
		System.out.println("Total Kg: "+this.totalPeso);
		System.out.println("Tipo descuento: "+ this.getTipoDescuento());
		System.out.println("**********************************************");
		System.out.print("\n\n");		
	}
}
*/
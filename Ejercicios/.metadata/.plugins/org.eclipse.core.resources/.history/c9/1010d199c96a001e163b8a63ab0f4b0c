package com.Ejercicios_Clase7;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

import org.junit.Before;
import org.junit.Test;

public class CarritoTest {
	private static int count=1;
	
	@Before
	public void PruebaBefore() {
		
		System.out.println("**** Pre ejecucion - Test Nro: "+count+" ****");
		++count;
	}
	
	
	/*************************************************************************
	 TEST 1: Cálculo teorico del precio total del carrito y comparado con el 
	 metodo del carrito getPrecioTotal(), que obtiene el precio total con dcto.
	**************************************************************************/	
	@Test
	public void PruebaMetodoGetPrecioTotal() {
		
		
		
		
		double precioEsperado=0.0;
		double precioCalculado=0.0;
		
      	assertEquals(precioCalculado,precioEsperado,0.0f);
      	
	}
	
	/*************************************************************************
	 TEST 2: Cálculo del peso total del carrito, comparado con el valor teorico.
	**************************************************************************/	
	@Test
	public void PruebaMetodoGetPesoTotal() {
		
		double pesoEsperado=0.0;
		double pesoCalculado=0.0;
		
		
      	
       	assertEquals(pesoCalculado,pesoEsperado,0.0f);      	
	}
	
	
	/*************************************************************************
	 TEST 3: DescuentoPorcentajeConTope
	**************************************************************************/	
	@Test
	public void PruebaMetodoDescuentoPorcentajeConTope() {
		
		DescuentoPorcentajeConTope objDescuentoPorcentajeConTope=new DescuentoPorcentajeConTope(12.3f);
		
		double porcentaje=12.3f;		
		double valorTeorico = objDescuentoPorcentajeConTope.getDescuento();
		
		assertEquals(valorTeorico, porcentaje, 0.0f);
	}
	
	
	/*************************************************************************
	 TEST 4: DescuentoPorcentajeConTope. Prueba limite del tope 20%
	**************************************************************************/	
	@Test
	public void PruebaMetodoDescuentoPorcentajeConTope2() {
		
		DescuentoPorcentajeConTope objDescuentoPorcentajeConTope=new DescuentoPorcentajeConTope(21.3f);
		
		double porcentaje=21.3f;		
		double valorTeorico = objDescuentoPorcentajeConTope.getDescuento();
		
		assertNotEquals(valorTeorico, porcentaje, 0.0f);
	}
	
	
	
}
